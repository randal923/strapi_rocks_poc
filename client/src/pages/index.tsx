import Head from "next/head";
import axios from "axios";
import { useEffect, useState } from "react";
import LoginForm from "src/components/login/login";
import Cookies from "js-cookie";
import { RockForm } from "src/components/create_rock/rock_form";
import styled from "styled-components";

export default function Home() {
  const [warning, setWarning] = useState("");
  const [rocks, setRocks] = useState([]);
  const [user, setUser] = useState("");

  const jwtToken = Cookies.get("jwt");

  const query = `
  query {
    rocks(
      pagination: {start: 0, limit: 10}
    ) {
      data {
        id
        attributes {
          title
          status
          description
          due_date
          createdAt
        }
      }
      meta {
        pagination {
          page
          pageSize
          pageCount
        }
      }
    }
  }
`;

  const fetchRocks = async () => {
    if (!jwtToken) {
      setWarning("Login to fetch rocks");
      return;
    }

    const headers = {
      Authorization: `Bearer ${jwtToken}`,
    };
    const response = await axios.post(
      "http://localhost:3006/graphql",
      {
        query,
      },
      { headers }
    );

    setRocks(response.data.data.rocks.data);

    if (response.data.errors) {
      setWarning(response.data.errors[0].message);
    }
  };

  useEffect(() => {
    fetchRocks();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <LoginForm user={user} setUser={setUser} />

        <h1>{warning}</h1>

        <RockForm user={user} setUser={setUser} />

        <ul>
          {rocks.length > 0 &&
            rocks.map((rock, index) => {
              return (
                <div key={index}>
                  <li>{rock.attributes.title}</li>
                  <li>{rock.attributes.description}</li>
                  <li>{rock.attributes.due_date}</li>
                  <li>{rock.attributes.createdAt}</li>
                  <li>{rock.attributes.status}</li>
                </div>
              );
            })}
        </ul>
      </Container>
    </>
  );
}

const Container = styled.main`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
`;
